name: Continuous

on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.ipynb"
      - "**.json"
      - "**.html"
      - "**.js"
      - "**.css"

jobs:
  build:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-18.04, macos-latest ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      # Enable gradle cache: https://github.com/actions/cache/blob/master/examples.md#java---gradle
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: check disk space
        run: df -h
      - name: Compile Sentencepiece JNI
        run: ./gradlew :extensions:sentencepiece:compileJNI
      - name: Compile fastText JNI
        run: ./gradlew :extensions:fasttext:compileJNI
      - name: Compile tokenizers JNI
        run: ./gradlew :extensions:tokenizers:compileJNI
      - name: Compile PyTorch JNI
        run: ./gradlew :engines:pytorch:pytorch-native:compileJNI
      - name: Compile PaddlePaddle JNI
        run: ./gradlew :engines:paddlepaddle:paddlepaddle-native:compileJNI
      - name: Build with Gradle
        run: ./gradlew build jRR jRV
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: reports
          path: ${{ github.workspace }}/**/build/reports/**/*
      - name: upload to codecov
        uses: codecov/codecov-action@v1.5.0
        with:
          files: ./build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml
          fail_ci_if_error: false
          path_to_write_report: ./codecov_report.txt

  # Windows platform for testing hybrid engines
  build-windows:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      # Enable gradle cache: https://github.com/actions/cache/blob/master/examples.md#java---gradle
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Compile Sentencepiece JNI
        run: ./gradlew :extensions:sentencepiece:compileJNI
      - name: Compile PyTorch JNI
        run: ./gradlew :engines:pytorch:pytorch-native:compileJNI
      - name: Compile PaddlePaddle JNI
        run: ./gradlew :engines:paddlepaddle:paddlepaddle-native:compileJNI
      - name: Compile tokenizers JNI
        run: ./gradlew :extensions:tokenizers:compileJNI
      - name: Integration tests
        # MXNet integration test on Github Action fail due to memory limitation on Windows
        run: |
          ./gradlew -Pjni "-Dai.djl.default_engine=PyTorch" test -x examples:test
          ./gradlew -Pjni --rerun-tasks "-Dai.djl.default_engine=TensorFlow" test -x examples:test
